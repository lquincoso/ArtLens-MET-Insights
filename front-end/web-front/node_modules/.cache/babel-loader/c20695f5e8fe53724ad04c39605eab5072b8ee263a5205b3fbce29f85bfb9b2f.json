{"ast":null,"code":"var _jsxFileName = \"/Users/doryapollon/Documents/MET-Museum-ML/front-end/web-front/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst swal = require(\"sweetalert2\");\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwtDecode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n  const history = useNavigate();\n  const loginUser = async (email, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n    if (response.status === 200) {\n      console.log(\"Logged In\");\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history(\"/\");\n      // alert popup\n      swal.fire({\n        title: \"Login Successful\",\n        icon: \"success\",\n        toast: true,\n        timer: 6000,\n        position: \"top-right\",\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    } else {\n      console.log(response.status);\n      console.log(\"there was a server issue\");\n      swal.fire({\n        title: \"Username or passowrd does not exists\",\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: \"top-right\",\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n    }\n  };\n  const registerUser = async (email, username, password, password2) => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password,\n          password2\n        })\n      });\n      const data = await response.json();\n      if (response.status === 201) {\n        history(\"/login\");\n        // alert popup\n        swal.fire({\n          title: \"Registration Successful, Login Now\",\n          icon: \"success\",\n          toast: true,\n          timer: 6000,\n          position: \"top-right\",\n          timerProgressBar: true,\n          showConfirmButton: false\n        });\n      } else {\n        var _Object$values$;\n        console.error(\"Registration failed:\", data);\n        throw new Error(data.detail || ((_Object$values$ = Object.values(data)[0]) === null || _Object$values$ === void 0 ? void 0 : _Object$values$[0]) || \"Registration failed\");\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      swal.fire({\n        title: error.message || \"An error occurred during registration\",\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: \"top-right\",\n        timerProgressBar: true,\n        showConfirmButton: false\n      });\n      throw error;\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history(\"/login\");\n    // alert popup\n    swal.fire({\n      title: \"YOu have been logged out...\",\n      icon: \"success\",\n      toast: true,\n      timer: 6000,\n      position: \"top-right\",\n      timerProgressBar: true,\n      showConfirmButton: false\n    });\n  };\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwtDecode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JYmzpvCCbobOqNiwnszJB7mkvFY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwtDecode","useNavigate","jsxDEV","_jsxDEV","swal","require","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","email","password","response","fetch","method","headers","body","stringify","data","json","console","log","status","access","setItem","fire","title","icon","toast","timer","position","timerProgressBar","showConfirmButton","registerUser","username","password2","_Object$values$","error","Error","detail","Object","values","message","logoutUser","removeItem","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/doryapollon/Documents/MET-Museum-ML/front-end/web-front/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nconst swal = require(\"sweetalert2\");\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  const [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n\n  const [user, setUser] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? jwtDecode(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n\n  const [loading, setLoading] = useState(true);\n\n  const history = useNavigate();\n\n  const loginUser = async (email, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (response.status === 200) {\n      console.log(\"Logged In\");\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      history(\"/\");\n      // alert popup\n      swal.fire({\n        title: \"Login Successful\",\n        icon: \"success\",\n        toast: true,\n        timer: 6000,\n        position: \"top-right\",\n        timerProgressBar: true,\n        showConfirmButton: false,\n      });\n    } else {\n      console.log(response.status);\n      console.log(\"there was a server issue\");\n      swal.fire({\n        title: \"Username or passowrd does not exists\",\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: \"top-right\",\n        timerProgressBar: true,\n        showConfirmButton: false,\n      });\n    }\n  };\n\n  const registerUser = async (email, username, password, password2) => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password,\n          password2,\n        }),\n      });\n  \n      const data = await response.json();\n  \n      if (response.status === 201) {\n        history(\"/login\");\n        // alert popup\n        swal.fire({\n          title: \"Registration Successful, Login Now\",\n          icon: \"success\",\n          toast: true,\n          timer: 6000,\n          position: \"top-right\",\n          timerProgressBar: true,\n          showConfirmButton: false,\n        });\n      } else {\n        console.error(\"Registration failed:\", data);\n        throw new Error(data.detail || Object.values(data)[0]?.[0] || \"Registration failed\");\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      swal.fire({\n        title: error.message || \"An error occurred during registration\",\n        icon: \"error\",\n        toast: true,\n        timer: 6000,\n        position: \"top-right\",\n        timerProgressBar: true,\n        showConfirmButton: false,\n      });\n      throw error;\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    history(\"/login\");\n    // alert popup\n    swal.fire({\n      title: \"YOu have been logged out...\",\n      icon: \"success\",\n      toast: true,\n      timer: 6000,\n      position: \"top-right\",\n      timerProgressBar: true,\n      showConfirmButton: false,\n    });\n  };\n\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser,\n  };\n\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwtDecode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n\n  return (\n    <AuthContext.Provider value={contextData}>\n      {loading ? null : children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}