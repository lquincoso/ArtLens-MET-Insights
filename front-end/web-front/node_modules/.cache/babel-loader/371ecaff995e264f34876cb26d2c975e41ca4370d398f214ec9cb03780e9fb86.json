{"ast":null,"code":"var _jsxFileName = \"/Users/doryapollon/Documents/MET-Museum-ML/front-end/web-front/src/components/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--nav', 'btn--nav-outline', 'btn--landing', 'btn--login-signup'];\nexport const Button = ({\n  children,\n  onClick,\n  buttonStyle,\n  to,\n  ariaLabel,\n  type = 'button'\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n\n  // If it's a submit button within a form, don't wrap it in Link\n  if (type === 'submit') {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn ${checkButtonStyle}`,\n      \"aria-label\": ariaLabel,\n      onClick: onClick,\n      type: type,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  // For navigation buttons, keep the Link wrapper\n  if (to) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: to,\n      style: {\n        width: '100%',\n        display: 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${checkButtonStyle}`,\n        \"aria-label\": ariaLabel,\n        onClick: onClick,\n        type: type,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${checkButtonStyle}`,\n    \"aria-label\": ariaLabel,\n    onClick: onClick,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","STYLES","Button","children","onClick","buttonStyle","to","ariaLabel","type","checkButtonStyle","includes","className","fileName","_jsxFileName","lineNumber","columnNumber","style","width","display","_c","$RefreshReg$"],"sources":["/Users/doryapollon/Documents/MET-Museum-ML/front-end/web-front/src/components/Button.js"],"sourcesContent":["import React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n\nconst STYLES = ['btn--nav', 'btn--nav-outline', 'btn--landing', 'btn--login-signup']\n\nexport const Button = ({children, onClick, buttonStyle, to, ariaLabel, type = 'button'}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n\n    // If it's a submit button within a form, don't wrap it in Link\n    if (type === 'submit') {\n        return (\n            <button \n                className={`btn ${checkButtonStyle}`} \n                aria-label={ariaLabel} \n                onClick={onClick}\n                type={type}\n            >\n                {children}\n            </button>\n        );\n    }\n\n    // For navigation buttons, keep the Link wrapper\n    if (to) {\n        return (\n            <Link to={to} style={{width: '100%', display: 'block'}}>\n                <button \n                    className={`btn ${checkButtonStyle}`} \n                    aria-label={ariaLabel} \n                    onClick={onClick}\n                    type={type}\n                >\n                    {children}\n                </button>\n            </Link>\n        );\n    }\n\n    return (\n        <button \n            className={`btn ${checkButtonStyle}`} \n            aria-label={ariaLabel} \n            onClick={onClick}\n            type={type}\n        >\n            {children}\n        </button>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAG,CAAC,UAAU,EAAE,kBAAkB,EAAE,cAAc,EAAE,mBAAmB,CAAC;AAEpF,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAACC,QAAQ;EAAEC,OAAO;EAAEC,WAAW;EAAEC,EAAE;EAAEC,SAAS;EAAEC,IAAI,GAAG;AAAQ,CAAC,KAAK;EACxF,MAAMC,gBAAgB,GAAGR,MAAM,CAACS,QAAQ,CAACL,WAAW,CAAC,GAAGA,WAAW,GAAGJ,MAAM,CAAC,CAAC,CAAC;;EAE/E;EACA,IAAIO,IAAI,KAAK,QAAQ,EAAE;IACnB,oBACIR,OAAA;MACIW,SAAS,EAAE,OAAOF,gBAAgB,EAAG;MACrC,cAAYF,SAAU;MACtBH,OAAO,EAAEA,OAAQ;MACjBI,IAAI,EAAEA,IAAK;MAAAL,QAAA,EAEVA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEjB;;EAEA;EACA,IAAIT,EAAE,EAAE;IACJ,oBACIN,OAAA,CAACF,IAAI;MAACQ,EAAE,EAAEA,EAAG;MAACU,KAAK,EAAE;QAACC,KAAK,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAf,QAAA,eACnDH,OAAA;QACIW,SAAS,EAAE,OAAOF,gBAAgB,EAAG;QACrC,cAAYF,SAAU;QACtBH,OAAO,EAAEA,OAAQ;QACjBI,IAAI,EAAEA,IAAK;QAAAL,QAAA,EAEVA;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEf;EAEA,oBACIf,OAAA;IACIW,SAAS,EAAE,OAAOF,gBAAgB,EAAG;IACrC,cAAYF,SAAU;IACtBH,OAAO,EAAEA,OAAQ;IACjBI,IAAI,EAAEA,IAAK;IAAAL,QAAA,EAEVA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB,CAAC;AAAAI,EAAA,GA3CYjB,MAAM;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}